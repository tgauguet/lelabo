$(".create-task").html("<%= escape_javascript(render 'tasks/task') %>")
$(".create-task2").html("<%= escape_javascript(render 'tasks/done_task') %>")
$(".count-tasks").html( "<%= escape_javascript (render 'tasks/count') %>")

// clear form fields when a task is created
$('#clear_form').find("input[type=text], text").val("")


$(function($){
  $(".progressBar").each(function(){
    $(this).progressbar({
      value: <%= @list.tasks.where(done: true).count %>,
      max: <%= @list.tasks.count %>
    });
  });
});

$(".cancel-btn").click(function(){
		$(".edittask").hide();
		$(".taskname").show();
});

//save position after dragging and dropping
var ready, set_positions;

set_positions = function(){
	//look through and give each task a data-pos
	//attributes that hold this position in the DOM
	$(".class-helper.inline_divs").each(function(i){
		$(this).attr("data-pos", i+1);
	});
}

ready = function(){
	//call set_positions function
	set_positions();
	$( "#sortable" ).sortable({
    	axis: "y",
    	opacity: 0.8
	});

	//after the order change
	$("#sortable").sortable().bind('sortupdate', function(e, ui) {
		//array to store new order
		updated_order = []
		//set the updated positions
		set_positions();
		//populate the new updated_order with the new set_positions
		$(".class-helper.inline_divs").each(function(i){
			updated_order.push({ id: $(this).data("id"), position: i + 1 });
		});
		//send the updated order via ajax
		$.ajax({
			type: "PUT",
			url: '/to_do_lists/sort/:id',
			data: { order: updated_order }
		});
	});
}

$(document).ready(ready);
/**
 * if using turbolinks
 */
$(document).on('page:load', ready);
